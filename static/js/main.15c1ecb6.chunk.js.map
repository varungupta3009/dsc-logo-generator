{"version":3,"sources":["index.js"],"names":["App","state","scale","name","WebFont","load","google","families","fontactive","familyName","fvd","drawImage","className","style","hidden","ref","e","dscLogo","onLoad","src","alt","this","width","height","renderScaleButton","label","margin","onChange","setState","target","value","logoCanvas","fullLogoImg","fullLogoUrl","variant","color","href","download","role","aria-label","ctx","getContext","font","canvasWidth","measureText","canvasHeight","setAttribute","Math","round","fillStyle","fillText","toDataURL","onClick","Component","display","render","document","getElementById"],"mappings":"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","file":"static/js/main.15c1ecb6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport WebFont from \"webfontloader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./style.css\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super({});\r\n        this.state = {\r\n            scale: 1,\r\n            name: \"Powered by google_logo Developers\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        WebFont.load({\r\n            google: {\r\n                families: [\"Roboto:400\", \"Product Sans\", \"Product Sans:400\", \"Google Sans\", \"Google Sans:400\"]\r\n            },\r\n            fontactive: (familyName, fvd) => {\r\n                this.drawImage()\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <h1>DSC Lockup Generator</h1>\r\n                <div style={hidden}>\r\n                    <img\r\n                        ref={e => {\r\n                            this.dscLogo = e;\r\n                        }}\r\n                        onLoad={() => {\r\n                            this.drawImage();\r\n                        }}\r\n                        src=\"dsc_icon-01.svg\"\r\n                        alt={`DSC Icon`}\r\n                    />\r\n                </div>\r\n                <p>Start editing to see some magic happen :) <br />\r\n                    Dimensions: {this.state.width} x {this.state.height} &nbsp; Scale: {this.state.scale}</p>\r\n                {this.renderScaleButton()}\r\n                <TextField\r\n                    label=\"University\"\r\n                    margin=\"normal\"\r\n                    onChange={e => {\r\n                        this.setState(\r\n                            {\r\n                                name: e.target.value\r\n                            },\r\n                            () => {\r\n                                this.drawImage();\r\n                            }\r\n                        );\r\n                    }}\r\n                />\r\n                <br />\r\n                <canvas\r\n                    style={hidden}\r\n                    ref={e => {\r\n                        this.logoCanvas = e;\r\n                    }}\r\n                />\r\n                <div className=\"full-logo-container\">\r\n                    <img\r\n                        ref={e => {\r\n                            this.fullLogoImg = e;\r\n                        }}\r\n                        alt={`DSC ${this.state.name} Logo`}\r\n                        src={this.state.fullLogoUrl}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    href={this.state.fullLogoUrl}\r\n                    download={`DSC ${this.state.name} Logo x${this.state.scale}.png`}\r\n                >\r\n                    SAVE IMAGE\r\n                </Button>\r\n                <footer>\r\n                    Made with <span role=\"img\" aria-label=\"love\">❤️ </span> by <a\r\n                        href=\"https://twitter.com/shanggyilim\">@shanggyilim</a> • <a\r\n                            href=\"https://github.com/shangyilim/dsc-logo-generator\">GitHub</a>\r\n                    &nbsp;• Modified also with <span role=\"img\" aria-label=\"love\">❤️ </span>by <a\r\n                        href=\"https://github.com/simonpham\">@simonpham</a>. <a\r\n                            href=\"https://github.com/DSC-Ton-Duc-Thang-University/dsc-logo-generator\">GitHub</a>\r\n                    &nbsp;• Fixed with much more <span role=\"img\" aria-label=\"love\">❤️ </span>by <a\r\n                        href=\"https://github.com/varungupta3009\">@varungupta3009</a>. <a\r\n                            href=\"https://github.com/varungupta3009/dsc-logo-generator\">GitHub</a>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    drawImage() {\r\n        const name = this.state.name;\r\n        const scale = this.state.scale;\r\n        const ctx = this.logoCanvas.getContext(\"2d\");\r\n        ctx.font = `94px \"Product Sans\"`;\r\n\r\n        const canvasWidth = ctx.measureText(\"Developer Student Clubs\").width + this.dscLogo.width + 80;\r\n        const canvasHeight = this.dscLogo.height + 80;\r\n\r\n        this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\r\n        this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\r\n\r\n        this.setState({\r\n            width: Math.round(canvasWidth * scale),\r\n            height: Math.round(canvasHeight * scale)\r\n        });\r\n\r\n        ctx.scale(scale, scale);\r\n        ctx.font = `400 94px \"Product Sans\"`;\r\n        ctx.fillStyle = \"rgb(103, 108, 114)\"; // Google (GD and DSC) Brand Palette's Primary Text Color\r\n\r\n        ctx.drawImage(this.dscLogo, 20, 0, this.dscLogo.width, this.dscLogo.height);\r\n\r\n        ctx.fillText(\"Developer Student Clubs \", this.dscLogo.width + 40, 110);\r\n\r\n        ctx.font = `400 64px \"Product Sans\"`;\r\n        ctx.fillText(name, this.dscLogo.width + 45, 200);\r\n\r\n        this.setState({\r\n            fullLogoUrl: this.logoCanvas.toDataURL()\r\n        });\r\n    }\r\n\r\n    renderScaleButton() {\r\n        return (\r\n            <div className=\"scale-button\">\r\n                <button\r\n                    onClick={() =>\r\n                        this.setState(\r\n                            {\r\n                                scale:\r\n                                    this.state.scale > 1 ? this.state.scale - 1 : this.state.scale\r\n                            },\r\n                            () => {\r\n                                this.drawImage();\r\n                            }\r\n                        )\r\n                    }\r\n                >\r\n                    -\r\n                </button>\r\n                <span>Scale</span>\r\n                <button\r\n                    onClick={() =>\r\n                        this.setState(\r\n                            {\r\n                                scale:\r\n                                    this.state.scale < 5 ? this.state.scale + 1 : this.state.scale\r\n                            },\r\n                            () => {\r\n                                this.drawImage();\r\n                            }\r\n                        )\r\n                    }\r\n                >\r\n                    +\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst hidden = {\r\n    display: \"none\"\r\n};\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}